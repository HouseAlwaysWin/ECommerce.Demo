@model LoginViewModel

@{
    ViewData["Title"] = "Log in";
}


<h1>@ViewData["Title"]</h1>
<div class="row" id="loginVue">
    <div class="col-md-4" v-cloak>
        <section>
             <ValidationObserver v-slot="{ handleSubmit }"> 
            <form  v-on:submit.prevent="handleSubmit(onSubmit)" >
                <h4>Use a local account to log in.</h4>
                <hr />
                <div class="form-group" >
                    <label for="">Email</label>
                    <ValidationProvider rules="required|email" name="email" v-slot="{ errors }">
                    <input v-model="email" type="text"  class="form-control" />
                    <span  class="text-danger" >{{ errors[0] }}</span>
                    </ValidationProvider>
                </div>
                <div class="form-group" >
                    <label for="">Password</label>
                    <ValidationProvider rules="required" name="password" v-slot="{ errors }">
                    <input v-model="password" type="password"  class="form-control" />
                    <span  class="text-danger" >{{ errors[0] }}</span>
                    </ValidationProvider>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label >
                            <input type="checkbox" v-model="rememberMe"  />
                            RememberMe
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Log in</button>
                </div>
                <div class="form-group">
                    <p>
                        <a id="forgot-password" href="/Account/ForgetPassword" >Forgot your password?</a>
                    </p>
                    <p>
                        <a href="/Account/Register">Register as a new user</a>
                    </p>
                </div>
            </form>
            </ValidationObserver> 
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                @if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    @* <partial name="_ValidationScriptsPartial" /> *@
@* 
<environment include="Development">
    <script  src="~/js/account/login.js" asp-append-version="true"></script>
</environment>
<environment include="Product">
    <script  src="~/js/account/login.min.js" asp-append-version="true"></script>
</environment>
 *@
  <script>
        $(window).on('load', function () {
            MyWebApp.login();
        });           
    </script>

}
